{"name": "test_affiliate", "status": "broken", "statusDetails": {"message": "AttributeError: 'AffiliatePage' object has no attribute 'loc'", "trace": "self = <pageobject.affiliate_page.AffiliatePage object at 0x10fd350a0>\nloc = ('xpath', '//*[@id=\"app\"]/div/div[1]/div/div[2]/div[4]/div[1]/span')\n\n    def locator_element(self,loc):\n        try:\n>           WebDriverWait(self.driver, 10).until(lambda driver:self.driver.find_element(*loc).is_displayed())#设置显式等待时间\n\nbase/base_page.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"75441f7dbdabb298d4a7033871f68aa7\")>\nmethod = <function BasePage.locator_element.<locals>.<lambda> at 0x10fd90700>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <testcase.test_affiliatePage.TestAffiliatePage object at 0x10f7b6760>\n\n    def test_affiliate(self):\n        # 调用登录方法\n        lp = LoginPage(self.driver)\n        lp.login_page_use_mobile(phone='899990000', code=login_code)\n        ap=AffiliatePage(self.driver)\n>       ap.affiliate_page(url=affiliate_url,product=product_name)\n\ntestcase/test_affiliatePage.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npageobject/affiliate_page.py:25: in affiliate_page\n    self.click(self.affiliate_loc)\nbase/base_page.py:56: in click\n    self.locator_element(loc).click()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pageobject.affiliate_page.AffiliatePage object at 0x10fd350a0>\nloc = ('xpath', '//*[@id=\"app\"]/div/div[1]/div/div[2]/div[4]/div[1]/span')\n\n    def locator_element(self,loc):\n        try:\n            WebDriverWait(self.driver, 10).until(lambda driver:self.driver.find_element(*loc).is_displayed())#设置显式等待时间\n            return self.driver.find_element(*loc)\n        except:\n>           print(u'%s can not find this element %s element' % (self.loc))\nE           AttributeError: 'AffiliatePage' object has no attribute 'loc'\n\nbase/base_page.py:33: AttributeError"}, "start": 1669881086060, "stop": 1669881299859, "uuid": "d66a2fb2-d160-4aa9-a5f3-71d432d0ead5", "historyId": "3c4d97c303ce1a777a13a94c303c3646", "testCaseId": "5a4782036d48527af63f446c67bf6af3", "fullName": "testcase.test_affiliatePage.TestAffiliatePage#test_affiliate", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_affiliatePage"}, {"name": "subSuite", "value": "TestAffiliatePage"}, {"name": "host", "value": "lihuadeMacBook-Pro.local"}, {"name": "thread", "value": "30476-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_affiliatePage"}]}